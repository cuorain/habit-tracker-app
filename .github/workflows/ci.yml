name: CI/CD

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: habit_tracker_test
          POSTGRES_USER: habit_user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install dependencies
        run: cd backend && npm ci

      - name: Wait for PostgreSQL to be ready
        run: |
          while ! pg_isready -h localhost -p 5432 -U habit_user; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Run tests
        env:
          NODE_ENV: test
          DATABASE_URL: postgres://habit_user:password@localhost:5432/habit_tracker_test
          JWT_SECRET: test_secret
          JWT_EXPIRATION_TIME: 36000
        run: cd backend && npm test

  build-docker-images-pr-validation:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Backend Docker image (PR validation)
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile.prod
          push: false # Only build, do not push on PR
          tags: ghcr.io/${{ github.repository }}/backend:${{ github.sha }}

      - name: Build Frontend Docker image (PR validation)
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          push: false # Only build, do not push on PR
          tags: ghcr.io/${{ github.repository }}/frontend:${{ github.sha }}
          build-args: |
            VITE_API_URL="http://localhost:8080"
